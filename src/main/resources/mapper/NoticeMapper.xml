<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.crm.mapper.NoticeMapper">

    <resultMap id="BaseResultMap" type="org.example.crm.entity.Notice">
            <id property="id" column="id" />
            <result property="content" column="content" />
            <result property="creator" column="creator" />
            <result property="created" column="created" />
            <result property="updated" column="updated" />
    </resultMap>

    <sql id="Base_Column_List">
        id,content,creator,created,updated
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from notice
        where  id = #{id} 
    </select>
    <select id="getNoticeCount" resultType="java.lang.Long">
        select COUNT(*)
        from notice
        where creator = #{uid} AND status = 2
    </select>
    <select id="selectNoticeList" resultType="org.example.crm.entity.Notice">
        select *
        from notice
        where creator = #{uid}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from notice
        where  id = #{id} 
    </delete>
    <delete id="deleteByIds">
        delete from notice
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.Notice" useGeneratedKeys="true">
        insert into notice
        ( id,content,creator,created,updated)
        values (#{id},#{content},#{creator},#{created},#{updated})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.Notice" useGeneratedKeys="true">
        insert into notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="content != null">content,</if>
                <if test="creator != null">creator,</if>
                <if test="created != null">created,</if>
                <if test="updated != null">updated,</if>
                <if test="status  != null">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="content != null">#{content},</if>
                <if test="creator != null">#{creator},</if>
                <if test="created != null">#{created},</if>
                <if test="updated != null">#{updated},</if>
                <if test="status  != null">#{status},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.crm.entity.Notice">
        update notice
        <set>
                <if test="content != null">
                    content = #{content},
                </if>
                <if test="creator != null">
                    creator = #{creator},
                </if>
                <if test="created != null">
                    created = #{created},
                </if>
                <if test="updated != null">
                    updated = #{updated},
                </if>
                <if test="status != null">
                    status = #{staus},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.crm.entity.Notice">
        update notice
        set 
            content =  #{content},
            creator =  #{creator},
            created =  #{created},
            updated =  #{updated}
        where   id = #{id} 
    </update>
    <update id="updateStatusById">
        update notice
        set
            updated =  #{notice.updated},
            status = #{notice.status}
        where id = #{id}
    </update>
</mapper>
