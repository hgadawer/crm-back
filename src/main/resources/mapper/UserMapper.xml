<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.crm.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="org.example.crm.entity.User">
            <id property="id" column="id" />
            <result property="email" column="email" />
            <result property="password" column="password" />
            <result property="name" column="name" />
            <result property="status" column="status" />
            <result property="created" column="created" />
            <result property="updated" column="updated" />
            <result property="accountNoExpired" column="account_no_expired" />
            <result property="accountNoLocked" column="account_no_locked" />
            <result property="credentialsNoExpired" column="credentials_no_expired" />
            <result property="accountEnabled" column="account_enabled" />
    </resultMap>

    <sql id="Base_Column_List">
        id,email,password,name,status,created,
        updated,account_no_expired,account_no_locked,credentials_no_expired,account_enabled
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where  id = #{id} 
    </select>
    <select id="selectByEmail" resultType="org.example.crm.entity.User">
        select * from user where email = #{email}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where  id = #{id} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.User" useGeneratedKeys="true">
        insert into user
        ( id,email,password,name,status,created,
        updated,account_no_expired,account_no_locked,credentials_no_expired,account_enabled)
        values (#{id},#{email},#{password},#{name},#{status},#{created},
        #{updated},#{accountNoExpired},#{accountNoLocked},#{credentialsNoExpired},#{accountEnabled})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.User" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="email != null">email,</if>
                <if test="password != null">password,</if>
                <if test="name != null">name,</if>
                <if test="status != null">status,</if>
                <if test="created != null">created,</if>
                <if test="updated != null">updated,</if>
                <if test="accountNoExpired != null">account_no_expired,</if>
                <if test="accountNoLocked != null">account_no_locked,</if>
                <if test="credentialsNoExpired != null">credentials_no_expired,</if>
                <if test="accountEnabled != null">account_enabled,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="email != null">#{email},</if>
                <if test="password != null">#{password},</if>
                <if test="name != null">#{name},</if>
                <if test="status != null">#{status},</if>
                <if test="created != null">#{created},</if>
                <if test="updated != null">#{updated},</if>
                <if test="accountNoExpired != null">#{accountNoExpired},</if>
                <if test="accountNoLocked != null">#{accountNoLocked},</if>
                <if test="credentialsNoExpired != null">#{credentialsNoExpired},</if>
                <if test="accountEnabled != null">#{accountEnabled},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.crm.entity.User">
        update user
        <set>
                <if test="email != null">
                    email = #{email},
                </if>
                <if test="password != null">
                    password = #{password},
                </if>
                <if test="name != null">
                    name = #{name},
                </if>
                <if test="status != null">
                    status = #{status},
                </if>
                <if test="created != null">
                    created = #{created},
                </if>
                <if test="updated != null">
                    updated = #{updated},
                </if>
                <if test="accountNoExpired != null">
                    account_no_expired = #{accountNoExpired},
                </if>
                <if test="accountNoLocked != null">
                    account_no_locked = #{accountNoLocked},
                </if>
                <if test="credentialsNoExpired != null">
                    credentials_no_expired = #{credentialsNoExpired},
                </if>
                <if test="accountEnabled != null">
                    account_enabled = #{accountEnabled},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.crm.entity.User">
        update user
        set 
            email =  #{email},
            password =  #{password},
            name =  #{name},
            status =  #{status},
            created =  #{created},
            updated =  #{updated},
            account_no_expired =  #{accountNoExpired},
            account_no_locked =  #{accountNoLocked},
            credentials_no_expired =  #{credentialsNoExpired},
            account_enabled =  #{accountEnabled}
        where   id = #{id} 
    </update>
    <update id="updatePasswordByEmail">
        update user
        set
            password =  #{password}
        where email = #{email}
    </update>
</mapper>
