<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.crm.mapper.ProductMapper">

    <resultMap id="BaseResultMap" type="org.example.crm.entity.Product">
            <id property="id" column="id" />
            <result property="name" column="name" />
            <result property="type" column="type" />
            <result property="unit" column="unit" />
            <result property="code" column="code" />
            <result property="price" column="price" />
            <result property="description" column="description" />
            <result property="status" column="status" />
            <result property="creator" column="creator" />
            <result property="created" column="created" />
            <result property="updated" column="updated" />
    </resultMap>

    <sql id="Base_Column_List">
        id,name,type,unit,code,price,
        description,status,creator,created,updated
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from product
        where  id = #{id} 
    </select>
    <select id="queryProductList" resultType="org.example.crm.entity.Product">
        SELECT *
        FROM product
        WHERE creator = #{uid}
        <if test="name != null and name != ''">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
    </select>
    <select id="findByName" resultType="org.example.crm.entity.Product">
        select * from product
        where name = #{name}
    </select>
    <select id="countAllProducts" resultType="java.lang.Integer">
        select count(id)
        from product
        where creator=#{uid}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from product
        where  id = #{id} 
    </delete>
    <delete id="deleteProductsByIds">
        delete from product
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.Product" useGeneratedKeys="true">
        insert into product
        ( id,name,type,unit,code,price,
        description,status,creator,created,updated)
        values (#{id},#{name},#{type},#{unit},#{code},#{price},
        #{description},#{status},#{creator},#{created},#{updated})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.Product" useGeneratedKeys="true">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="type != null">type,</if>
                <if test="unit != null">unit,</if>
                <if test="code != null">code,</if>
                <if test="price != null">price,</if>
                <if test="description != null">description,</if>
                <if test="status != null">status,</if>
                <if test="creator != null">creator,</if>
                <if test="created != null">created,</if>
                <if test="updated != null">updated,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="name != null">#{name},</if>
                <if test="type != null">#{type},</if>
                <if test="unit != null">#{unit},</if>
                <if test="code != null">#{code},</if>
                <if test="price != null">#{price},</if>
                <if test="description != null">#{description},</if>
                <if test="status != null">#{status},</if>
                <if test="creator != null">#{creator},</if>
                <if test="created != null">#{created},</if>
                <if test="updated != null">#{updated},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.crm.entity.Product">
        update product
        <set>
                <if test="name != null">
                    name = #{name},
                </if>
                <if test="type != null">
                    type = #{type},
                </if>
                <if test="unit != null">
                    unit = #{unit},
                </if>
                <if test="code != null">
                    code = #{code},
                </if>
                <if test="price != null">
                    price = #{price},
                </if>
                <if test="description != null">
                    description = #{description},
                </if>
                <if test="status != null">
                    status = #{status},
                </if>
                <if test="creator != null">
                    creator = #{creator},
                </if>
                <if test="created != null">
                    created = #{created},
                </if>
                <if test="updated != null">
                    updated = #{updated},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.crm.entity.Product">
        update product
        set 
            name =  #{name},
            type =  #{type},
            unit =  #{unit},
            code =  #{code},
            price =  #{price},
            description =  #{description},
            status =  #{status},
            creator =  #{creator},
            created =  #{created},
            updated =  #{updated}
        where   id = #{id} 
    </update>
</mapper>
