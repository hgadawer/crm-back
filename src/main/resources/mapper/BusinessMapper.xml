<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.crm.mapper.BusinessMapper">

    <resultMap id="BaseResultMap" type="org.example.crm.entity.Business">
            <id property="id" column="id" />
            <result property="name" column="name" />
            <result property="amount" column="amount" />
            <result property="beginTime" column="begin_time" />
            <result property="overTime" column="over_time" />
            <result property="remarks" column="remarks" />
            <result property="cid" column="cid" />
            <result property="productlist" column="productlist" />
            <result property="status" column="status" />
            <result property="creator" column="creator" />
            <result property="created" column="created" />
            <result property="updated" column="updated" />
    </resultMap>

    <sql id="Base_Column_List">
        id,name,amount,begin_time,over_time,remarks,
        cid,productlist,status,creator,created,
        updated
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from business
        where  id = #{id} 
    </select>
    <select id="queryBusinessList" resultType="org.example.crm.entity.Business">
        SELECT *
        FROM business
        WHERE 1=1
        <if test="name != null and name != ''">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
    </select>
    <select id="findByName" resultType="org.example.crm.entity.Business">
        select * from business
        where name = #{name}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from business
        where  id = #{id} 
    </delete>
    <delete id="deleteByIds">
        delete from business
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.Business" useGeneratedKeys="true">
        insert into business
        ( id,name,amount,begin_time,over_time,remarks,
        cid,productlist,status,creator,created,
        updated)
        values (#{id},#{name},#{amount},#{beginTime},#{overTime},#{remarks},
        #{cid},#{productlist},#{status},#{creator},#{created},
        #{updated})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.crm.entity.Business" useGeneratedKeys="true">
        insert into business
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="amount != null">amount,</if>
                <if test="beginTime != null">begin_time,</if>
                <if test="overTime != null">over_time,</if>
                <if test="remarks != null">remarks,</if>
                <if test="cid != null">cid,</if>
                <if test="productlist != null">productlist,</if>
                <if test="status != null">status,</if>
                <if test="creator != null">creator,</if>
                <if test="created != null">created,</if>
                <if test="updated != null">updated,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="name != null">#{name},</if>
                <if test="amount != null">#{amount},</if>
                <if test="beginTime != null">#{beginTime},</if>
                <if test="overTime != null">#{overTime},</if>
                <if test="remarks != null">#{remarks},</if>
                <if test="cid != null">#{cid},</if>
                <if test="productlist != null">#{productlist},</if>
                <if test="status != null">#{status},</if>
                <if test="creator != null">#{creator},</if>
                <if test="created != null">#{created},</if>
                <if test="updated != null">#{updated},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.crm.entity.Business">
        update business
        <set>
                <if test="name != null">
                    name = #{name},
                </if>
                <if test="amount != null">
                    amount = #{amount},
                </if>
                <if test="beginTime != null">
                    begin_time = #{beginTime},
                </if>
                <if test="overTime != null">
                    over_time = #{overTime},
                </if>
                <if test="remarks != null">
                    remarks = #{remarks},
                </if>
                <if test="cid != null">
                    cid = #{cid},
                </if>
                <if test="productlist != null">
                    productlist = #{productlist},
                </if>
                <if test="status != null">
                    status = #{status},
                </if>
                <if test="creator != null">
                    creator = #{creator},
                </if>
                <if test="created != null">
                    created = #{created},
                </if>
                <if test="updated != null">
                    updated = #{updated},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.crm.entity.Business">
        update business
        set 
            name =  #{name},
            amount =  #{amount},
            begin_time =  #{beginTime},
            over_time =  #{overTime},
            remarks =  #{remarks},
            cid =  #{cid},
            productlist =  #{productlist},
            status =  #{status},
            creator =  #{creator},
            created =  #{created},
            updated =  #{updated}
        where   id = #{id} 
    </update>
</mapper>
